
// import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "./globals.css";
// import { Toaster } from "@/components/ui/toaster";
// import AuthProvider from "@/context/authProvider";
// import QueryclientProvider from "@/lib/queryClientProvider";


// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };


// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased vsc-initialized`}
//       > 
//       <AuthProvider>
//       <Toaster/>
//       <QueryclientProvider>
     
//       {children}
//       </QueryclientProvider>
//       </AuthProvider> 
//       </body>
//     </html>
//   );
// }

// "use client";

// // import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "./globals.css";
// import { Toaster } from "@/components/ui/toaster";
// import AuthProvider from "@/context/authProvider";
// import QueryclientProvider from "@/lib/queryClientProvider";
// import NProgress from "nprogress";
// import "nprogress/nprogress.css"; // Import the NProgress styles
// import { usePathname, useSearchParams } from "next/navigation";
// import { useEffect } from "react";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// // export const metadata: Metadata = {
// //   title: "Create Next App",
// //   description: "Generated by create next app",
// // };



// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   const pathname = usePathname();
//   const searchParams = useSearchParams();

//   useEffect(() => {
//     const handleStart = () => NProgress.start();
//     const handleStop = () => NProgress.done();

//     // Start NProgress when pathname or searchParams change
//     handleStart();
//     handleStop();

//     // Cleanup (No specific router events in `app` dir like `onRouteChange`)
//     return () => {
//       NProgress.done();
//     };
//   }, [pathname, searchParams]);

//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased vsc-initialized`}
//       >
//         <AuthProvider>
//           <Toaster />
//           <QueryclientProvider>{children}</QueryclientProvider>
//         </AuthProvider>
//       </body>
//     </html>
//   );
// }


// app/layout.tsx
import { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Providers from "./providers";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "BlogVerse MotherFucker",
  description: "Generated by create next app",
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased vsc-initialized`}>
        <Providers>{children}</Providers>
      </body>
    </html>
  );
}
